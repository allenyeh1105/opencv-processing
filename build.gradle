plugins {
    id 'java-library'
    id 'org.bytedeco.gradle-javacpp-platform' version "1.5.4"
}

group 'gab.opencv'
version '0.6.1'

def javaCvVersion = '1.5.4'
def outputName = 'opencv-processing'

// We can set this on the command line too this way: -PjavacppPlatform=linux-x86_64,macosx-x86_64,windows-x86_64,etc
ext {
    javacppPlatform = 'linux-x86_64,macosx-x86_64,windows-x86_64,linux-armhf' // defaults to Loader.getPlatform()
}

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

configurations {
    jar.archiveName = outputName + '.jar'

    processing
    compile.extendsFrom processing
}

javadoc {
    source = sourceSets.main.allJava
    classpath = configurations.runtime
}

dependencies {
    // compile
    testCompile group: 'junit', name: 'junit', version: '4.11'

    // opencv
    compile group: 'org.bytedeco', name: 'opencv-platform', version: "4.4.0-$javaCvVersion"
    compile group: 'org.bytedeco', name: 'openblas-platform', version: "0.3.10-$javaCvVersion"

    // processing
    processing group: 'org.processing', name: 'core', version: '3.3.7'
    processing group: 'org.jogamp.jogl', name: 'jogl-all-main', version: '2.3.2'
    processing group: 'org.jogamp.gluegen', name: 'gluegen-rt-main', version: '2.3.2'
}

task fatJar(type: Jar) {
    archiveName = "$outputName-combined.jar"
    dependsOn configurations.runtime
    from {
        (configurations.runtime - configurations.processing).collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
    with jar
}